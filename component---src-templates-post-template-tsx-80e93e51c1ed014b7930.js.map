{"version":3,"file":"component---src-templates-post-template-tsx-80e93e51c1ed014b7930.js","mappings":"6NAGA,IA2CA,EA9ByC,WACvC,IAAMA,GAAUC,EAAAA,EAAAA,QAAuB,MA0BvC,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,MACd,GAAwB,OAApBF,EAAQG,QAAZ,CAIA,IAAMC,EAAgCC,SAASC,cAAc,UAEvDC,EAAqC,CACzCC,IAxBM,gCAyBNC,KAxBO,mCAyBP,aAAc,WACdC,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQR,GAAYS,SAAQ,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KACnDd,EAAWe,aAAaF,EAAKC,MAG/B,UAAAlB,EAAQG,eAAR,SAAiBiB,YAAYhB,MAC5B,KAEI,QAACiB,EAAD,CAAkBC,IAAKtB,KAK1BqB,GAAmB,cAAH,oBAAG,CAAH,qECzCtB,IAIA,EAJyD,SAAC,GAAa,IAAXE,EAAW,EAAXA,KAC1D,OAAO,QAACC,EAAD,CAAkBC,wBAAyB,CAAEC,OAAQH,MAKxDC,GAAmB,cAAH,oBAAG,CAAH,06B,uCCFtB,IAqBA,EArB2D,SAAC,GAItD,IAHJG,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,WAIA,OACE,QAACC,EAAD,MACE,QAACC,EAAD,CAAcC,QAJC,kBAAMC,OAAOC,QAAQC,UAKlC,QAAC,IAAD,CAAiBC,KAAMC,EAAAA,QAEzB,QAACC,EAAD,KAAQX,IACR,QAACY,EAAD,MACE,mBAAMV,EAAWW,KAAK,OACtB,mBAAMZ,MAQRE,GAAsB,cAAH,oBAAG,CAAH,uLAenBC,GAAe,cAAH,oBAAG,CAAH,2QAmBZO,GAAQ,cAAH,oBAAG,CAAH,4QAiBLC,GAAW,cAAH,oBAAG,CAAH,+OCpEd,IAcA,EAdmD,SAAC,GAK9C,IAJJZ,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAY,EACI,EADJA,UAEA,OACE,QAACC,EAAD,MACE,QAACC,EAAD,CAAiBC,MAAOH,EAAWI,IAAI,eACvC,QAAC,EAAD,CAAclB,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,MAOpDa,GAAkB,cAAH,oBAAG,CAAH,8GAUfC,GAAkB,QAAO,SAACG,GAAD,OAC7B,QAAC,EAAAC,GAAD,UAAiBD,EAAjB,CAAwBE,MAAO,CAAEC,SAAU,iBADrB,sBAAH,+ICWrB,EAnC4D,SAAC,GAKvD,IAHmBC,EAGnB,EAJJC,KACEC,kBAAqBF,MAEXG,EACR,EADJC,SAAYD,KAEZ,EAcIH,EAAM,GAbRK,KACEhC,EAFJ,EAEIA,KAFJ,IAGIiC,YACE7B,EAJN,EAIMA,MACA8B,EALN,EAKMA,QACA7B,EANN,EAMMA,KACAC,EAPN,EAOMA,WAPN,IAQMY,UACqBiB,EAT3B,EASQC,gBAAmBD,gBACnBE,EAVR,EAUQA,UAKR,OACE,QAACC,EAAA,EAAD,CAAUlC,MAAOA,EAAOmC,YAAaL,EAASM,IAAKV,EAAMT,MAAOgB,IAC9D,QAAC,EAAD,CACEjC,MAAOA,EACPC,KAAMA,EACNC,WAAYA,EACZY,UAAWiB,KAEb,QAAC,EAAD,CAAanC,KAAMA,KACnB,QAAC,EAAD","sources":["webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport React, { FunctionComponent, useEffect, useRef } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst repo = \"Jeongeun-Choi/jeongeun.github.io\";\n\ntype UtterancAttributesType = {\n  src: string;\n  repo: string;\n  \"issue-term\": string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst CommentWidget: FunctionComponent = () => {\n  const element = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (element.current === null) {\n      return;\n    }\n\n    const utterances: HTMLScriptElement = document.createElement(\"script\");\n\n    const attributes: UtterancAttributesType = {\n      src,\n      repo,\n      \"issue-term\": \"pathname\",\n      label: \"Comment\",\n      theme: \"github-light\",\n      crossorigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current?.appendChild(utterances);\n  }, []);\n\n  return <UtteranceWrapper ref={element} />;\n};\n\nexport default CommentWidget;\n\nconst UtteranceWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React, { FunctionComponent } from \"react\";\n\ntype PostContentProps = {\n  html: string;\n};\n\nconst PostContent: FunctionComponent<PostContentProps> = ({ html }) => {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport default PostContent;\n\nconst MarkdownRenderer = styled.div`\n  //Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  /* width: 768px; */\n  margin: 0 auto;\n  padding: 100px 0;\n  word-break: break-all;\n\n  //Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  //Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n  // Adjust Code Style\n  pre[class*=\"language-\"] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    tab-size: 2;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FunctionComponent } from \"react\";\n\nexport type PostHeadInfoProps = {\n  title: string;\n  date: string;\n  categories: string[];\n};\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = ({\n  title,\n  date,\n  categories,\n}) => {\n  const goBackPage = () => window.history.back();\n\n  return (\n    <PostHeadInfoWrppaer>\n      <PrevPageIcon onClick={goBackPage}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </PrevPageIcon>\n      <Title>{title}</Title>\n      <PostData>\n        <div>{categories.join(\"/\")}</div>\n        <div>{date}</div>\n      </PostData>\n    </PostHeadInfoWrppaer>\n  );\n};\n\nexport default PostHeadInfo;\n\nconst PostHeadInfoWrppaer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: #ffffff;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 20px;\n  }\n`;\n\nconst PrevPageIcon = styled.div`\n  display: grid;\n  place-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #ffffff;\n  color: #000000;\n  font-size: 22px;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n  @media (max-width: 768px) {\n    width: 30px;\n    height: 30px;\n    font-size: 18px;\n  }\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 45px;\n  font-weight: 800;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst PostData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 400;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport React, { FunctionComponent } from \"react\";\nimport { PostFrontmatterType } from \"types/PostItem.types\";\nimport PostHeadInfo from \"./PostHeadInfo\";\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData;\n  alt: string;\n  className?: string;\n};\n\ntype PostHeadProps = Pick<\n  PostFrontmatterType,\n  \"title\" | \"date\" | \"categories\"\n> & { thumbnail: IGatsbyImageData };\n\nconst PostHead: FunctionComponent<PostHeadProps> = ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) => {\n  return (\n    <PostHeadWrapper>\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  );\n};\n\nexport default PostHead;\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`;\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: \"absolute\" }} />\n))`\n  z-index: -1;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  filter: brightness(0.5);\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`;\n","import Template from \"components/Common/Template\";\nimport CommentWidget from \"components/Post/CommentWidget\";\nimport PostContent from \"components/Post/PostContent\";\nimport PostHead from \"components/Post/PostHead\";\nimport { graphql } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport { PostPageItemType } from \"types/PostItem.types\";\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst post_template: FunctionComponent<PostTemplateProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) => {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  );\n};\n\nexport default post_template;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["element","useRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","UtteranceWrapper","ref","html","MarkdownRenderer","dangerouslySetInnerHTML","__html","title","date","categories","PostHeadInfoWrppaer","PrevPageIcon","onClick","window","history","back","icon","faArrowLeft","Title","PostData","join","thumbnail","PostHeadWrapper","BackgroundImage","image","alt","props","G","style","position","edges","data","allMarkdownRemark","href","location","node","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","Template","description","url"],"sourceRoot":""}